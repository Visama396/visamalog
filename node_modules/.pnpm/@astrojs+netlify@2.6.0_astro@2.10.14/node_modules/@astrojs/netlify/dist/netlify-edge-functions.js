import { App } from "astro/app";
const clientAddressSymbol = Symbol.for("astro.clientAddress");
function createExports(manifest) {
  const app = new App(manifest);
  const handler = async (request, context) => {
    var _a;
    const url = new URL(request.url);
    if (manifest.assets.has(url.pathname)) {
      return;
    }
    const routeData = app.match(request);
    const ip = request.headers.get("x-nf-client-connection-ip") || (context == null ? void 0 : context.ip) || ((_a = context == null ? void 0 : context.remoteAddr) == null ? void 0 : _a.hostname);
    Reflect.set(request, clientAddressSymbol, ip);
    const response = await app.render(request, routeData);
    if (app.setCookieHeaders) {
      for (const setCookieHeader of app.setCookieHeaders(response)) {
        response.headers.append("Set-Cookie", setCookieHeader);
      }
    }
    return response;
  };
  return { default: handler };
}
export {
  createExports
};
